<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="ARCommunication_t" Id="{3697f1d2-5144-45fb-a78b-bb7912cd4429}" SpecialFunc="None">
    <Declaration><![CDATA[{warning 'ARCommunication does not work'}

FUNCTION_BLOCK ARCommunication_t
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_ARDevice : ARCommunicationWSExtention_t;
	_TLSSettings : ST_IotSocketTls;
	
	_isConnected : BOOL := false;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="getConnectionStatus" Id="{e629fbae-7329-41fc-8f52-af6f3d5840fa}">
      <Declaration><![CDATA[METHOD getConnectionStatus : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// gets the communication status of the connection
getConnectionStatus := _ARDevice.bConnected;
return;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getLastMessage" Id="{08a227d9-9e52-499f-99b3-521fa34ba409}">
      <Declaration><![CDATA[METHOD getLastMessage : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// gets the last saved message from the client]]></ST>
      </Implementation>
    </Method>
    <Method Name="newMessageRecived" Id="{ebfdd1a5-1abb-4bc2-b017-ad4dd8dc6e08}">
      <Declaration><![CDATA[METHOD newMessageRecived : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// returns if a new message has been recived]]></ST>
      </Implementation>
    </Method>
    <Method Name="sendNewMessage" Id="{7ab18af5-7bc5-4c96-b223-14eb6cce1ab3}">
      <Declaration><![CDATA[METHOD sendNewMessage : BOOL
VAR_INPUT
	str : STRING;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// sends a new message to the client
_ARDevice.SendMessage(pContent := ADR(str), nContentSize := SIZEOF(str), bTextContent := true, bCompress := false);]]></ST>
      </Implementation>
    </Method>
    <Method Name="startConnection" Id="{89d039a8-3323-4f6e-9842-93aae51be57a}">
      <Declaration><![CDATA[METHOD startConnection : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _ARDevice.bConnected THEN
	RETURN;
END_IF


_ARDevice.nHostPort := 1880;
_ARDevice.sHostName := '192.168.3.223';
_ARDevice.sUri := 'ws/PLC';
_ARDevice.bKeepAlive := FALSE;
_ARDevice.nConnectResponseTimeout := 60;
_ARDevice.nKeepAliveCloseTimeout := 60;
//_ARDevice.stTLS.bNoServerCertCheck := TRUE;
_ARDevice.bPerMessageDeflate := FALSE;
//_ARDevice.sOrigin := 'ws/PLC';
_ARDevice.Connect(TRUE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="stopConnection" Id="{95fcb138-8ce0-4fcb-8c62-1a615f795ab1}">
      <Declaration><![CDATA[METHOD stopConnection : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT _ARDevice.bConnected THEN
	RETURN;
END_IF

_ARDevice.Disconnect();]]></ST>
      </Implementation>
    </Method>
    <Method Name="update" Id="{25efbe41-3ef8-45cc-91e3-4ad477496cc8}">
      <Declaration><![CDATA[METHOD update : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// is called every cycle, used to upholed communication and check if a new message has been recived
_ARDevice.Execute();
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>